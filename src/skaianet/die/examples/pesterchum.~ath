
import png pesterheads;
import png chummy;
import png palsy;
import png chipper;
import png bully;
import png peppy;
import png rancorous;
import png checkmark;

U~F color(r, g, b) {
    import uncolor color;
    color.red = r;
    color.green = g;
    color.blue = b;
    return color.get();
}

U~F ternary(c, t, f) {
    import bit subloop;
    subloop.bind(c);
    out = f;
    ~ATH(subloop) {
        out = t;
        subloop.bind(FALSE);
    } EXECUTE(NULL);
    return out;
}

bgcolor = color(255, 181, 0);
bdcolor = color(255, 247, 0);
fgcolor = color(255, 255, 255);
iscolor = color(0, 0, 0);
btcolor = color(196, 138, 0);
rncolor = color(246, 1, 0);
rpcolor = color(186, 0, 0);

import signalqueue queue;
import object shared;
import entropy ent;

shared.mood = `CHUMMY';
shared.handle = `anonymousChum' .. ent.next(1000);
U~F nullprocedure() {}
shared.onupdate = nullprocedure;
U~F addupdate(proc) {
    oldproc = shared.onupdate;
    U~F virtproc() {
        proc();
        oldproc();
    }
    shared.onupdate = virtproc;
}

import dictionary moodmap;
moodmap[`CHUMMY'] = chummy;
moodmap[`PALSY'] = palsy;
moodmap[`CHIPPER'] = chipper;
moodmap[`BULLY'] = bully;
moodmap[`PEPPY'] = peppy;
moodmap[`RANCOROUS'] = rancorous;

import window TestWindow;

TestWindow.width = 232;
TestWindow.height = 346;
TestWindow.background = bgcolor;
TestWindow.border = bdcolor;
TestWindow.borderWidth = 2;
// TestWindow.decorated = false;
addupdate(TestWindow.refresh);

import label title;

title.x = 17;
title.y = 1;
title.scale = 2;
title.color = fgcolor;
title.text = `~ATHTERCHUM v1';
TestWindow.add(title);

import panel titlepanel;

titlepanel.x = 12;
titlepanel.y = 32;
titlepanel.width = 209;
titlepanel.height = 55;
titlepanel.color = iscolor;
titlepanel.border = bdcolor;
titlepanel.borderWidth = 2;
TestWindow.add(titlepanel);

import icon heads;

heads.x = 4;
heads.y = 6;
heads.image = pesterheads;
titlepanel.add(heads);

import label chatclient;

chatclient.x = 101;
chatclient.y = 21;
chatclient.color = fgcolor;
chatclient.text = `CHAT CLIENT';
titlepanel.add(chatclient);

import label chumroll;

chumroll.x = 19;
chumroll.y = 88;
chumroll.color = iscolor;
chumroll.text = `CHUMROLL:';
TestWindow.add(chumroll);

import panel chumpanel;

chumpanel.x = 12;
chumpanel.y = 104;
chumpanel.width = 209;
chumpanel.height = 82;
chumpanel.color = iscolor;
chumpanel.border = bdcolor;
chumpanel.borderWidth = 2;
TestWindow.add(chumpanel);

import button pester;

pester.x = 77;
pester.y = 189;
pester.width = 71;
pester.shiftX = 1;
pester.background = bdcolor;
pester.color = iscolor;
pester.border = btcolor;
pester.backgroundPressed = btcolor;
pester.colorPressed = bdcolor;
pester.borderPressed = iscolor;
pester.borderWidth = 2;
pester.text = `PESTER!';
pester.queue = queue;
import stream stdout;
U~F pesterevent() {
    stdout.println(`Pestering!');
}
pester.signal = pesterevent;
TestWindow.add(pester);

import label chumhandle;

chumhandle.x = 18;
chumhandle.y = 215;
chumhandle.color = iscolor;
chumhandle.text = `MYCHUMHANDLE:';
TestWindow.add(chumhandle);

import panel chumhandlepanel;

chumhandlepanel.x = 12;
chumhandlepanel.y = 231;
chumhandlepanel.width = 209;
chumhandlepanel.height = 24;
chumhandlepanel.color = iscolor;
chumhandlepanel.border = bdcolor;
chumhandlepanel.borderWidth = 2;
TestWindow.add(chumhandlepanel);

import label chumhandlebody;

chumhandlebody.x = 26;
chumhandlebody.y = 4;
chumhandlebody.color = fgcolor;
chumhandlebody.boldFont = FALSE;
U~F updatetext() {
    chumhandlebody.text = shared.handle;
}
addupdate(updatetext);

chumhandlepanel.add(chumhandlebody);

import label moodlabel;

moodlabel.x = 18;
moodlabel.y = 259;
moodlabel.color = iscolor;
moodlabel.text = `MOOD:';
TestWindow.add(moodlabel);

import icon activemood;

activemood.image = checkmark;
activemood.flipRenderPasses = true;
TestWindow.add(activemood);

U~F makemood(x, y, shx, chx, moodname, isred) {
    import button btn;
    btn.x = x;
    btn.y = y;
    btn.shiftX = shx;
    btn.width = 104;

    btn.background = ternary(isred, rncolor, bdcolor);
    btn.color = iscolor;
    btn.border = btcolor;
    btn.backgroundPressed = ternary(isred, rpcolor, btcolor);
    btn.colorPressed = ternary(isred, rncolor, bdcolor);
    btn.borderPressed = iscolor;
    btn.borderWidth = 2;
    btn.text = moodname;
    btn.queue = queue;
    btn.moveToTopWhenPressed = true;
    U~F moodbtnupdate() {
        import bit subloop;
        subloop.bind(shared.mood == moodname);
        ~ATH(subloop) {
            activemood.x = x + chx;
            activemood.y = y + 8;
            subloop.bind(FALSE);
        } EXECUTE(NULL);
    }
    addupdate(moodbtnupdate);
    U~F moodbtnevent() {
        shared.mood = moodname;
        shared.onupdate();
    }
    btn.signal = moodbtnevent;
    TestWindow.add(btn);

    import icon head;

    head.x = x + 7;
    head.y = y + 4;
    head.image = ternary(isred, rancorous, chummy);
    head.flipRenderPasses = true;
    TestWindow.add(head);
}
makemood(12, 275, -7, 71, `CHUMMY', FALSE);
makemood(12, 295, -10, 64, `PALSY', FALSE);
makemood(12, 315, -4, 78, `CHIPPER', FALSE);
makemood(117, 275, -11, 64, `BULLY', FALSE);
makemood(117, 295, -11, 63, `PEPPY', FALSE);
makemood(117, 315, 2, 90, `RANCOROUS', TRUE);

shared.onupdate();

TestWindow.start();

import dream HalfLength;

~ATH(TestWindow) {
    ~ATH(queue) {
        queue.pull()();
    } EXECUTE(NULL);
    HalfLength.sleep();
} EXECUTE(NULL);

THIS.DIE();
